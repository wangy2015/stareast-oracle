package ${package}.controller;

import java.util.List;
import java.util.Arrays;
import com.stareast.common.base.Result;
import com.stareast.common.support.Convert;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.stareast.common.annotation.Log;
import com.stareast.common.enums.BusinessType;
import ${package}.domain.${className};
import ${package}.service.I${className}Service;
import com.stareast.framework.web.base.BaseController;
import com.stareast.common.utils.poi.ExcelUtil;
import lombok.extern.slf4j.Slf4j;

/**
 * ${tableComment} 控制层
 * 
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@Controller
@RequestMapping("/${moduleName}/${classname}")
public class ${className}Controller extends BaseController {
    private String prefix = "${moduleName}/${classname}";
	
	private final I${className}Service ${classname}Service;

	@Autowired
	public ${className}Controller(I${className}Service ${classname}Service) {
		this.${classname}Service = ${classname}Service;
	}

	/**
	*  列表页
	*/
	@RequiresPermissions("${moduleName}:${classname}:view")
	@GetMapping
	public String ${classname}(){
	    return prefix + "/${classname}";
	}

	/**
	 * 新增页
	 */
	@GetMapping("/add")
	public String add(){
		return prefix + "/add";
	}

	/**
	 * 编辑页
	 */
	@GetMapping("/edit/{${primaryKey.attrname}}")
	public String edit(@PathVariable("${primaryKey.attrname}") ${primaryKey.attrType} ${primaryKey.attrname}, ModelMap mmap){
		${className} ${classname} = ${classname}Service.getById(${primaryKey.attrname});
		mmap.put("${classname}", ${classname});
		return prefix + "/edit";
	}
	
	/**
	 * 查询${tableComment}列表
	 */
	@RequiresPermissions("${moduleName}:${classname}:list")
	@PostMapping("/list")
	@ResponseBody
	public Result list(${className} ${classname}){
		startPage();
        List<${className}> list = ${classname}Service.list(${classname});
		return Result.success(getDataTable(list));
	}

	/**
	 * 新增保存${tableComment}
	 */
	@RequiresPermissions("${moduleName}:${classname}:add")
	@Log(title = "${tableComment}", businessType = BusinessType.INSERT)
	@PostMapping("/add")
	@ResponseBody
	public Result addSave(${className} ${classname}){
		${classname}Service.save(${classname});
		return Result.success();
	}

	/**
	 * 修改保存${tableComment}
	 */
	@RequiresPermissions("${moduleName}:${classname}:edit")
	@Log(title = "${tableComment}", businessType = BusinessType.UPDATE)
	@PostMapping("/edit")
	@ResponseBody
	public Result editSave(${className} ${classname}){
		${classname}Service.updateById(${classname});
		return Result.success();
	}
	
	/**
	 * 删除${tableComment}
	 */
	@RequiresPermissions("${moduleName}:${classname}:remove")
	@Log(title = "${tableComment}", businessType = BusinessType.DELETE)
	@PostMapping( "/remove")
	@ResponseBody
	public Result remove(String ids){
		Long[] longIds = Convert.toLongArray(ids);
		${classname}Service.removeByIds(Arrays.asList(longIds));
		return Result.success();
	}

	/**
	 * 导出${tableComment}列表
	 */
	@RequiresPermissions("${moduleName}:${classname}:export")
	@PostMapping("/export")
	@ResponseBody
	public Result export(${className} ${classname}){
		List<${className}> list = ${classname}Service.list(${classname});
		ExcelUtil<${className}> util = new ExcelUtil<>(${className}.class);
		util.exportExcel(list, "${classname}");
		return Result.success();
	}
}
